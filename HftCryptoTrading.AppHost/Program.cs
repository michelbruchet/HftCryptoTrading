var builder = DistributedApplication.CreateBuilder(args);

var cache = builder.AddRedis("cache");

var hubApi = builder
    .AddProject<Projects.HftCryptoTrading_ApiService>("hubApi")
    .WithEnvironment("Exchange__ApiKey", builder.Configuration["Exchange:ApiKey"])
    .WithEnvironment("Exchange__ApiSecret", builder.Configuration["Exchange:ApiSecret"])
    .WithEnvironment("Exchange__IsBackTest", builder.Configuration["Exchange:IsBackTest"])
    .WithEnvironment("LimitSymbolsMarket", builder.Configuration["LimitSymbolsMarket"])
    .WithEnvironment("Hub__HubApiKey", builder.Configuration["Hub:HubApiKey"])
    .WithEnvironment("Hub__HubApiSecret", builder.Configuration["Hub:HubApiSecret"])
    .WithEnvironment("Hub__NameSpace", builder.Configuration["Hub:NameSpace"])
    .WithEnvironment("Runtime__IndicatorsPath", builder.Configuration["Runtime:IndicatorsPath"])
    .WithEnvironment("Runtime__StrategiesPath", builder.Configuration["Runtime:StrategiesPath"])
    .WithEnvironment("Trading__Period", builder.Configuration["Trading:Period"])
    .WithEnvironment("Trading__StartElpasedTime", builder.Configuration["Trading:StartElpasedTime"])
    .WithEnvironment("Serilog__Using__0", "Serilog.Sinks.Console")
    .WithEnvironment("Serilog__Using__1", "Serilog.Sinks.File")
    .WithEnvironment("Serilog__MinimumLevel", "Debug")
    .WithEnvironment("Serilog__WriteTo__0__Name", "Console")
    .WithEnvironment("Serilog__WriteTo__1__Name", "File")
    .WithEnvironment("Serilog__WriteTo__1__Args__path", "Logs/applog-.txt")
    .WithEnvironment("Serilog__WriteTo__1__Args__rollingInterval", "Day")
    .WithEnvironment("Serilog__Enrich__0", "FromLogContext")
    .WithEnvironment("Serilog__Enrich__1", "WithMachineName")
    .WithEnvironment("Serilog__Properties__ApplicationName", "HftCryptoTrading.HubApi")
    .WithExternalHttpEndpoints();

builder.AddProject<Projects.HftCryptoTrading_Web>("webfrontend")
    .WithExternalHttpEndpoints()
    .WithReference(cache)
    .WithReference(hubApi)
    .WithEnvironment("Exchange__ApiKey", builder.Configuration["Exchange:ApiKey"])
    .WithEnvironment("Exchange__ApiSecret", builder.Configuration["Exchange:ApiSecret"])
    .WithEnvironment("Exchange__IsBackTest", builder.Configuration["Exchange:IsBackTest"])
    .WithEnvironment("LimitSymbolsMarket", builder.Configuration["LimitSymbolsMarket"])
    .WithEnvironment("Hub__HubApiUrl", builder.Configuration["Hub:HubApiUrl"])
    .WithEnvironment("Hub__HubApiKey", builder.Configuration["Hub:HubApiKey"])
    .WithEnvironment("Hub__HubApiSecret", builder.Configuration["Hub:HubApiSecret"])
    .WithEnvironment("Hub__NameSpace", builder.Configuration["Hub:NameSpace"])
    .WithEnvironment("Runtime__IndicatorsPath", builder.Configuration["Runtime:IndicatorsPath"])
    .WithEnvironment("Runtime__StrategiesPath", builder.Configuration["Runtime:StrategiesPath"])
    .WithEnvironment("Trading__Period", builder.Configuration["Trading:Period"])
    .WithEnvironment("Trading__StartElpasedTime", builder.Configuration["Trading:StartElpasedTime"])
    .WithEnvironment("Serilog__Using__0", "Serilog.Sinks.Console")
    .WithEnvironment("Serilog__Using__1", "Serilog.Sinks.File")
    .WithEnvironment("Serilog__MinimumLevel", "Debug")
    .WithEnvironment("Serilog__WriteTo__0__Name", "Console")
    .WithEnvironment("Serilog__WriteTo__1__Name", "File")
    .WithEnvironment("Serilog__WriteTo__1__Args__path", "Logs/applog-.txt")
    .WithEnvironment("Serilog__WriteTo__1__Args__rollingInterval", "Day")
    .WithEnvironment("Serilog__Enrich__0", "FromLogContext")
    .WithEnvironment("Serilog__Enrich__1", "WithMachineName")
    .WithEnvironment("Serilog__Properties__ApplicationName", "HftCryptoTrading.webfront");

builder.AddProject<Projects.HftCryptoTrading_Saga_MarketWatcher>("hftcryptotrading-saga-marketdownloader")
    .WithReference(cache)
    .WithReference(hubApi)
    .WithEnvironment("Exchange__ApiKey", builder.Configuration["Exchange:ApiKey"])
    .WithEnvironment("Exchange__ApiSecret", builder.Configuration["Exchange:ApiSecret"])
    .WithEnvironment("Exchange__IsBackTest", builder.Configuration["Exchange:IsBackTest"])
    .WithEnvironment("LimitSymbolsMarket", builder.Configuration["LimitSymbolsMarket"])
    .WithEnvironment("Hub__HubApiKey", builder.Configuration["Hub:HubApiKey"])
    .WithEnvironment("Hub__HubApiSecret", builder.Configuration["Hub:HubApiSecret"])
    .WithEnvironment("Hub__HubApiUrl", builder.Configuration["Hub:HubApiUrl"])
    .WithEnvironment("Hub__NameSpace", builder.Configuration["Hub:NameSpace"])
    .WithEnvironment("Runtime__IndicatorsPath", builder.Configuration["Runtime:IndicatorsPath"])
    .WithEnvironment("Runtime__StrategiesPath", builder.Configuration["Runtime:StrategiesPath"])
    .WithEnvironment("Trading__Period", builder.Configuration["Trading:Period"])
    .WithEnvironment("Trading__StartElpasedTime", builder.Configuration["Trading:StartElpasedTime"])
    .WithEnvironment("Serilog__Using__0", "Serilog.Sinks.Console")
    .WithEnvironment("Serilog__Using__1", "Serilog.Sinks.File")
    .WithEnvironment("Serilog__MinimumLevel", "Debug")
    .WithEnvironment("Serilog__WriteTo__0__Name", "Console")
    .WithEnvironment("Serilog__WriteTo__1__Name", "File")
    .WithEnvironment("Serilog__WriteTo__1__Args__path", "Logs/applog-.txt")
    .WithEnvironment("Serilog__WriteTo__1__Args__rollingInterval", "Day")
    .WithEnvironment("Serilog__Enrich__0", "FromLogContext")
    .WithEnvironment("Serilog__Enrich__1", "WithMachineName")
    .WithEnvironment("Serilog__Properties__ApplicationName", "HftCryptoTrading.saga.marketdownloader")
;

builder.AddProject<Projects.HftCryptoTrading_Saga_StrategyEvaluator>("hftcryptotrading-saga-strategyevaluator")
    .WithReference(cache)
    .WithReference(hubApi)
    .WithEnvironment("Exchange__ApiKey", builder.Configuration["Exchange:ApiKey"])
    .WithEnvironment("Exchange__ApiSecret", builder.Configuration["Exchange:ApiSecret"])
    .WithEnvironment("Exchange__IsBackTest", builder.Configuration["Exchange:IsBackTest"])
    .WithEnvironment("LimitSymbolsMarket", builder.Configuration["LimitSymbolsMarket"])
    .WithEnvironment("Hub__HubApiKey", builder.Configuration["Hub:HubApiKey"])
    .WithEnvironment("Hub__HubApiSecret", builder.Configuration["Hub:HubApiSecret"])
    .WithEnvironment("Hub__HubApiUrl", builder.Configuration["Hub:HubApiUrl"])
    .WithEnvironment("Hub__NameSpace", builder.Configuration["Hub:NameSpace"])
    .WithEnvironment("Runtime__IndicatorsPath", builder.Configuration["Runtime:IndicatorsPath"])
    .WithEnvironment("Runtime__StrategiesPath", builder.Configuration["Runtime:StrategiesPath"])
    .WithEnvironment("Trading__Period", builder.Configuration["Trading:Period"])
    .WithEnvironment("Trading__StartElpasedTime", builder.Configuration["Trading:StartElpasedTime"])
    .WithEnvironment("Serilog__Using__0", "Serilog.Sinks.Console")
    .WithEnvironment("Serilog__Using__1", "Serilog.Sinks.File")
    .WithEnvironment("Serilog__MinimumLevel", "Debug")
    .WithEnvironment("Serilog__WriteTo__0__Name", "Console")
    .WithEnvironment("Serilog__WriteTo__1__Name", "File")
    .WithEnvironment("Serilog__WriteTo__1__Args__path", "Logs/applog-.txt")
    .WithEnvironment("Serilog__WriteTo__1__Args__rollingInterval", "Day")
    .WithEnvironment("Serilog__Enrich__0", "FromLogContext")
    .WithEnvironment("Serilog__Enrich__1", "WithMachineName")
    .WithEnvironment("Serilog__Properties__ApplicationName", "HftCryptoTrading.saga.strategyevaluator")
;

var customerApi = builder.AddProject<Projects.HftCryptoTrading_Customers>("hftcryptotrading-customers")
    .WithReference(hubApi);

builder.AddProject<Projects.HftCryptoTrading_Saga_OpenPositionMonitor>("hftcryptotrading-saga-openpositionmonitor")
    .WithReference(cache)
    .WithReference(hubApi)
    .WithReference(customerApi)
    .WithEnvironment("Exchange__ApiKey", builder.Configuration["Exchange:ApiKey"])
    .WithEnvironment("Exchange__ApiSecret", builder.Configuration["Exchange:ApiSecret"])
    .WithEnvironment("Exchange__IsBackTest", builder.Configuration["Exchange:IsBackTest"])
    .WithEnvironment("LimitSymbolsMarket", builder.Configuration["LimitSymbolsMarket"])
    .WithEnvironment("Hub__HubApiKey", builder.Configuration["Hub:HubApiKey"])
    .WithEnvironment("Hub__HubApiSecret", builder.Configuration["Hub:HubApiSecret"])
    .WithEnvironment("Hub__HubApiUrl", builder.Configuration["Hub:HubApiUrl"])
    .WithEnvironment("Hub__NameSpace", builder.Configuration["Hub:NameSpace"])
    .WithEnvironment("Runtime__IndicatorsPath", builder.Configuration["Runtime:IndicatorsPath"])
    .WithEnvironment("Runtime__StrategiesPath", builder.Configuration["Runtime:StrategiesPath"])
    .WithEnvironment("Trading__Period", builder.Configuration["Trading:Period"])
    .WithEnvironment("Trading__StartElpasedTime", builder.Configuration["Trading:StartElpasedTime"])
    .WithEnvironment("Serilog__Using__0", "Serilog.Sinks.Console")
    .WithEnvironment("Serilog__Using__1", "Serilog.Sinks.File")
    .WithEnvironment("Serilog__MinimumLevel", "Debug")
    .WithEnvironment("Serilog__WriteTo__0__Name", "Console")
    .WithEnvironment("Serilog__WriteTo__1__Name", "File")
    .WithEnvironment("Serilog__WriteTo__1__Args__path", "Logs/applog-.txt")
    .WithEnvironment("Serilog__WriteTo__1__Args__rollingInterval", "Day")
    .WithEnvironment("Serilog__Enrich__0", "FromLogContext")
    .WithEnvironment("Serilog__Enrich__1", "WithMachineName")
    .WithEnvironment("Serilog__Properties__ApplicationName", "HftCryptoTrading.saga.openpositionmonitor")
;

builder.Build().Run();